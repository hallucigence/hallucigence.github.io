const canvas=document.querySelector("canvas");canvas.width=window.innerWidth,canvas.height=window.innerHeight;const ctx=canvas.getContext("2d"),particules=[],configuration={numberParticules:120,minSpeed:.4,maxSpeed:.8,maxDistance:.07*window.innerWidth+.05*window.innerHeight,radius:2,backgroundColor:"#000",frontColor:"#FFF",mouseSpace:100};let mouseX=-300,mouseY=-300;window.addEventListener("mousemove",e=>{mouseX=e.clientX,mouseY=e.clientY}),window.addEventListener("resize",()=>{canvas.width=window.innerWidth,canvas.height=window.innerHeight});const render=()=>{requestAnimationFrame(render),ctx.fillStyle=configuration.backgroundColor,ctx.fillRect(0,0,canvas.width,canvas.height),particules.forEach(e=>{let n=e.x+e.speedX,t=e.y+e.speedY;(n<=0||n>=window.innerWidth)&&(e.speedX*=-1),(t<=0||t>=window.innerHeight)&&(e.speedY*=-1),e.x=n,e.y=t;let i=mouseX-e.x,o=mouseY-e.y;configuration.mouseSpace,ctx.beginPath(),ctx.fillStyle=configuration.frontColor,ctx.arc(e.x,e.y,configuration.radius,0,2*Math.PI,!0),ctx.fill(),particules.forEach(n=>{let t=e.x-n.x,i=e.y-n.y,o=Math.sqrt(t*t+i*i);o<=configuration.maxDistance&&(ctx.save(),ctx.globalAlpha=1-o/configuration.maxDistance,ctx.beginPath(),ctx.strokeStyle=configuration.frontColor,ctx.moveTo(e.x,e.y),ctx.lineTo(n.x,n.y),ctx.stroke(),ctx.restore())})})},createParticules=()=>new Promise(e=>{for(let n=0;n<configuration.numberParticules;n++){let t={x:Math.random()*window.innerWidth,y:Math.random()*window.innerHeight,speedX:Math.random()*(configuration.maxSpeed-configuration.minSpeed)+configuration.minSpeed,speedY:Math.random()*(configuration.maxSpeed-configuration.minSpeed)+configuration.minSpeed,isColliding:!1};.5>=Math.random()&&(t.speedX*=-1),.5>=Math.random()&&(t.speedY*=-1),particules.push(t)}e()});createParticules().then(()=>{render()});